# Client host settings for ssh-socks-proxy@.service template instances
# Save as ~/.config/ssh-socks-proxy/ssh-socks-proxy.conf
# See https://github.com/MestreLion/ssh-reverse-tunnel

# This will read ~/.ssh/config for hosts and connection settings,
# and ~/.config/ssh-socks-proxy for SSH keys and known_hosts,
# so only need to specify non-default hosts or parameters.

# Target host with custom ssh-socks-proxy service account installed
#Host example
#	Hostname               example.com
#	DynamicForward         1080

# Be careful with Host entries matching entries in ~/.ssh/config, as any User or
# IdentityFile specified there will override the custom ssh-socks-proxy service
# account and keys intended to be used when installed on target host.
# If so, one may omit Hostname and Port but may need User and IdentityFile.
#Host example.in-user-config
#	User                   ssh-socks-proxy
#	IdentityFile           ~/.config/ssh-socks-proxy/id_ed25519
#	DynamicForward         1080

# Target host that creates a reverse tunnel to this source host
#Host example.reverse-proxy
#	Hostname               localhost
#	Port                   22222
#	User                   someone
#	DynamicForward         20000

# Default settings
Host *
	ConnectTimeout         50
	ExitOnForwardFailure   yes
	IdentitiesOnly         yes
	LogLevel               VERBOSE
	RequestTTY             no
	ServerAliveInterval    20
	ServerAliveCountMax    3
	StrictHostKeyChecking  accept-new
	TCPKeepAlive           yes
	UpdateHostKeys         yes
	UserKnownHostsFile     ~/.config/ssh-socks-proxy/known_hosts

	# Re-include the user config ignored by ssh -F, for host connection info
	Include                ~/.ssh/config

	# Defaults if not specified by above Hosts or user config
	User                   ssh-socks-proxy
	IdentityFile           ~/.config/ssh-socks-proxy/id_ed25519

	# Re-include the system-wide config that was ignored due to ssh -F
	Include                /etc/ssh/ssh_config

# ConnectTimeout=50
# Used only when connecting. Default is the system TCP timeout.
#
# DynamicForward=1080
# The default (client) proxy port to listen
#
# ExitOnForwardFailure=yes
# Disconnect and exit if ssh cannot set up port forwarding.
# Default: 'no', keeps the (useless) connection active.
#
# IdentityFile=~/.config/ssh-socks-proxy/id_ed25519
# Path to the private key. Default: ~/.ssh/id_{ed25519,rsa,...}
#
# LogLevel=DEBUG
# QUIET, FATAL, ERROR, INFO (default), VERBOSE, DEBUG/DEBUG1, DEBUG2, DEBUG3
#
# RequestTTY=no
# Disable TTY allocation. Options: yes, no (-T), force (-t), auto (default?)
#
# ServerAliveInterval=20
# Time without data to check if server is alive. Default: 0, no check.
#
# ServerAliveCountMax=3
# Attempts for above check to fail before disconnecting. Default: already 3.
# Both combined means disconnect if server is unresponsive for 3*20=60 seconds.
# This is intentionally greater than the suggested 45 seconds for ClientAlive*
#
# StrictHostKeyChecking=accept-new
# Accept keys from new hosts and reject changed host keys.
# Default: 'ask', confirmation required for new hosts and reject changed keys.
#
# TCPKeepAlive=yes
# Periodically send TCP KeepAlive messages. Default: already 'yes'.
# Not related to the above options other than preventing server-side disconnects.
#
# UpdateHostKeys=yes
# Allows server to transparently present additional keys before revoking old ones
# Default: no
#
# User=ssh-socks-proxy
# Remote host user to log in as. Default is same local username connecting.
#
# UserKnownHostsFile=~/.config/ssh-socks-proxy/known_hosts
# Independent file for target host keys, to avoid using ~/.ssh/known_hosts
